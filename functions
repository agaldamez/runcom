#!/bin/bash

# print 256-colour
colour() {
	for i in {0..255}
    do
        printf "\x1b[38;5;${i}mcolour${i}\x1b[0m\n"
    done
}

# search top 10 tags for a Docker image
dockertags() {
	curl -s "https://registry.hub.docker.com/v2/repositories/library/$1/tags/"|jq '."results"[]["name"]'
}

# colorized man pages
export GROFF_NO_SGR=yes
man() {
   env \
       LESS_TERMCAP_mb=$(printf "\e[35m") \
       LESS_TERMCAP_md=$(printf "\e[34m") \
       LESS_TERMCAP_me=$(printf "\e[0m") \
       LESS_TERMCAP_se=$(printf "\e[0m") \
       LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
       LESS_TERMCAP_ue=$(printf "\e[0m") \
       LESS_TERMCAP_us=$(printf "\e[34m") \
           man "$@"
}

# git branch bashrc
parse_git_branch() {
	git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# oc show server bashrc
oc_show_server() {
    oc whoami --show-server | awk -F "." '{print $2}'
}

# gpg-agent for ssh
#start_gpg-agent() {
#    if [ -z "$SSH_AUTH_SOCK" ]
#    then
#       GPG_TTY=$(tty)
#       export GPG_TTY
#       export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
#       eval $(gpg-agent --daemon)
#    fi
#}
#start_gpg-agent

# ssh-agent
start_ssh_agent() {
    if [ -z "$SSH_AUTH_SOCK" ]
    then
        eval $(ssh-agent -s)
        ssh-add id_rsa
    fi

    ssh-add -l | grep -i rsa > /dev/null
    if [ $? -ne 0 ]
    then
        echo "ssh-key not in keyring"
        ssh-add
        #ssh-add `ls ~/.ssh | grep -P 'id_rsa(?!.*pub)'`
    fi
}
start_ssh_agent

# Create a new directory and enter it
mkd() {
	mkdir -p "$@"
	cd "$@" || exit
}

# colorized oc client
oc() {
    case $@ in
        *exec*|*rsh*|*debug*|*json*)
            ~/.local/bin/oc $@
            ;;
        *)
            ~/.local/bin/oc $@ | ccze -Ao nolookups
            ;;
    esac    
}
